
/*Juan Camilo Martinez Torres*/
/*Crear tabla fabricante en tienda*/
CREATE TABLE fabricante (
  codigo INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL
);

/*Crear tabla producto*/
CREATE TABLE producto (
  codigo INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  precio DOUBLE NOT NULL,
  codigo_fabricante INT UNSIGNED NOT NULL,
  FOREIGN KEY (codigo_fabricante) REFERENCES fabricante(codigo)
);

INSERT INTO fabricante VALUES(1, 'Asus');
INSERT INTO fabricante VALUES(2, 'Lenovo');
INSERT INTO fabricante VALUES(3, 'Hewlett-Packard');
INSERT INTO fabricante VALUES(4, 'Samsung');
INSERT INTO fabricante VALUES(5, 'Seagate');
INSERT INTO fabricante VALUES(6, 'Crucial');
INSERT INTO fabricante VALUES(7, 'Gigabyte');
INSERT INTO fabricante VALUES(8, 'Huawei');
INSERT INTO fabricante VALUES(9, 'Xiaomi');

INSERT INTO producto VALUES(1, 'Disco duro SATA3 1TB', 86.99, 5);
INSERT INTO producto VALUES(2, 'Memoria RAM DDR4 8GB', 120, 6);
INSERT INTO producto VALUES(3, 'Disco SSD 1 TB', 150.99, 4);
INSERT INTO producto VALUES(4, 'GeForce GTX 1050Ti', 185, 7);
INSERT INTO producto VALUES(5, 'GeForce GTX 1080 Xtreme', 755, 6);
INSERT INTO producto VALUES(6, 'Monitor 24 LED Full HD', 202, 1);
INSERT INTO producto VALUES(7, 'Monitor 27 LED Full HD', 245.99, 1);
INSERT INTO producto VALUES(8, 'Portátil Yoga 520', 559, 2);
INSERT INTO producto VALUES(9, 'Portátil Ideapd 320', 444, 2);
INSERT INTO producto VALUES(10, 'Impresora HP Deskjet 3720', 59.99, 3);
INSERT INTO producto VALUES(11, 'Impresora HP Laserjet Pro M26nw', 180, 3);



5. Lista los nombres de los fabricantes ordenados de forma descendente.
R//
SELECT * FROM fabricante ORDER BY nombre DESC;
6. Lista los nombres de los productos ordenados de manera Ascendente.
R//
SELECT nombre FROM producto ORDER BY nombre ASC;
7. Lista el código de los fabricantes que tienen productos en la tabla producto,  mostrando los códigos que son repetición.
R//
8. Traer los 3 productos que tienen menor precio.
R//
SELECT * FROM producto ORDER BY precio ASC LIMIT 3;
9. Traer los cinco productos de mayor precio.
R//
SELECT * FROM producto ORDER BY precio DESC LIMIT 5;
10. Realizar la inserción de tres nuevos productos.
R//
INSERT INTO producto VALUES(14, '  SATA3 1TB', 82, 5);
11. Consultar los productos que sea impresora HP.
R//
SELECT*FROM producto WHERE nombre LIKE '%mpre%';
12. Eliminar uno de los nuevos productos creados. 
R//
DELETE FROM producto WHERE NOMBRE = '  SATA3 1TB';
13. Actualizar el precio de uno de los productos creados.
R//
Inserte
INSERT INTO producto VALUES(14, 'MacBook', 82, 5);
Actualice 
UPDATE producto SET PRECIO = 10;
14. Traer los productos que esten dentro del rango de precios 120 y 500.
R//
SELECT * FROM producto WHERE PRECIO > 120 AND PRECIO < 500;
15. Consultar el nombre de cada fabricante con los productos asociados a ellos.
R//
SELECT fabricante.nombre ,producto.codigo_fabricante, producto.nombre
FROM producto
INNER JOIN fabricante ON producto.codigo = fabricante.codigo;

16. Consultar cada producto con el nombre de cada fabricante 
17. Traer los productos asociados cuyo fabricante es “Crucial” con su respectivo nombre.